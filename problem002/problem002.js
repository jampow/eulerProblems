/**
 * Problem 2 
 * https://projecteuler.net/problem=2
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous 
 * two terms. By starting with 1 and 2, the first 10 terms will be: 
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...  
 *
 * By considering the terms in the Fibonacci sequence whose values do not 
 * exceed four million, find the sum of the even-valued terms.
 */

const fib = (lim, arr) => {
	if(!arr) arr = [1,2]
	if(!lim) lim = 1e9 

	return (last(arr) > lim) 
		? removeLast(arr)
		: arr.push(sum2lastItem(arr)) && fib(lim,arr)
}

const last = arr => arr.slice(-1)[0]

const removeLast = arr => arr.slice(0, arr.length - 1)

const sum2lastItem = arr => arr.slice(-2).reduce(sum, 0)

const sum = (x, y) => x + y

const even = num => num % 2 === 0

const sumEven = lim => fib(lim).filter(even).reduce(sum, 0)

console.log(sumEven(4e6))
